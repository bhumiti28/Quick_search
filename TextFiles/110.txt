https://www.javatpoint.com/linux-tree-command
Linux Tree Command - javatpoint
Linux Tree Command - javatpoint ? Home Linux C Java Python Shell Scripting SQL HTML CSS JavaScript XML Ajax Android Projects Interview Q Linux Tutorial Linux Tutorial What is Linux Advantages of Linux Linux History Linux Features Linux Bash Unix vs Linux Linux vs Windows Linux Distributions Linux Licensing Set Environment Variable Linux Set Command Linux export Command Linux Directories Linux Directories Linux Home Directory Linux pwd Linux cd Linux Absolute Relative Linux Path Completion Linux ls Linux mkdir Linux rmdir Rename Folder in Linux Linux Commands Linux commands List Commands with Example Linux Users Linux Users Linux Create User Local su Commands Linux User Management User Password Local Groups Add User to Group Linux id Command Linux Files Linux Files Linux File System Linux Create File Linux file Linux touch Linux rm Linux cp Linux mv Linux rename Linux install Command Linux read Command Linux File Contents Linux File Contents Open File in Linux Linux Edit File Linux which command Linux head Linux tail Linux cat Linux tac Linux more Linux less Linux strings command Linux Print Linux Process Kill Process Linux Linux terminating 1) Linux kill 2) Linux killall 3) Linux pkill 4) Linux xkill Nohup Command Linux at command Linux exit command Linux File Hierarchy Linux File Hierarchy Binary Directories Configuration Directories Data Directories Memory Directories Usr Directory var Directory Non-standard directories Linux Filters Linux Filters Linux cat Linux cut Linux grep Linux comm Linux sed Linux tee Linux tr Linux uniq Linux wc Linux od Linux sort Linux gzip AWK Command Linux AWK Command Programming with Linux Linux make command GCC Linux Linux I/O Redirection Linux I/O Redirection Linux Input Redirection Linux Output Redirection Linux Error Redirection Linux Unix Tools Linux Unix Tools Linux Find Linux Locate Linux Date Linux Cal Linux Sleep Linux Time Linux zcat/zmore Linux bzip2 / bunzip2 Linux bzcat / bzmore Linux df Linux Regex Linux expr command Linux RegEx Linux Grep RegEx Linux rename RegEx Linux Sed RegEx File Security Linux File OwnerShip Linux chgrp Command Linux File Permission Linux chmod Command Linux chown command Linux Advance Permission Linux File Links 1) Linux Inodes 2) Linux Link Directories 3) Linux Hard links 4) Linux Soft links 5) Linux Remove link Shell Commands Linux Shell Commands Linux Aliases Linux Arguments Linux Displaying Shell Linux Control Operators 1) Semicolon 2) Ampersand 3) Dollar Question Mark 4) Double Ampersand 5) Double Vertical Bar 6) Combining && and || 7) Pound Sign 8) ESC Linux File Globbing Linux Shell Embedding Linux Shell History Linux history Command Linux History Commands Linux Histroy Size Linux Bang Bang Linux Networking Linux Networking 1) Linux ifconfig 2) Linux ip Linux telnet Command SSH Linux Linux mail Command 3) Linux traceroute 4) Linux tracepath 5) Linux ping 6) Linux netstat 7) Linux ss 8) Linux dig 9) Linux nslookup 10) Linux route 11) Linux host 12) Linux arp 13) Linux iwconfig 14) Linux hostname 15) Linux curl & wget Linux Curl Command 16) Linux mtr 17) Linux whois 18) Linux ifplugstatus Linux Misc chkconfig command in Linux How to change user password in Linux Awk Command Usage How to unzip files in Linux Linux chroot Command Linux Watch Command Ubuntu Vs. Kali Linux Clear cache Linux 7 QC Tools Linux Process Memory Usage Linux Tree Command Wine Linux Linux Commands to Check Disk Space Manjaro Vs. Ubuntu Architecture of Linux Linux Lite Linux Shell Linux Meaning Linux Foundation Linux List Directories Linux Shortcuts Best Linux Distro Who command in Linux Linux Editors Linux Text Editors Linux vi Editor Vi Editor 1) switch 2) move 3) jump 4) delete 5) undo and repeat 6) cut, copy, paste 7) cut, copy, paste blocks 8) Start and end 9) Joining 10) word 11) Search 12) Replace all 13) Text Buffers 14) Abbreviations Linux System Admin Linux Admin Commands Linux uptime Linux service Linux pmap Linux wget command Linux ftp or sftp Linux free Command Linux top Linux last Linux ps Linux shutdown Linux info Linux env Linux du Linux init Linux Nano Editor Linux shred Linux mount Linux route Linux Man Pages Linux man Linux man -a Linux man -aw Linux man -f Linux man -k(apropos) Linux man whereis Whatis command in Linux Error Codes Linux Error Codes Linux Interview next ? ? prev Linux Tree Command In Linux, a tree is defined as a recursive directory listing program which generates a depth-indented file's list. Without any parameters, the tree lists the files in the present directory. At the time directory parameters are given, the tree alternately lists each file per directory found in the given directories. When the list of each directory and file is complete, then the tree will return the total number of directories and files listed. Various options are available in order to modify the character which is used in the output and to use color. Syntax 
$ tree [-adfgilopqrstuxACDFNS] [-L level [-R]] [-H baseHREF] [-T title] [-o filename] [--nolinks] [-P pattern] [-l pattern] [--inodes] [--device] [--noreport] [--dirsfirst] [--version] [--help] [directory ?..]
 Options: Tags Description --help Outputs a verbose usage list. --version Outputs the tree's version. -a All the files are printed. By default, hidden files are not printed by trees (means files that start with a dot '.'). Under no circumstances does the tree print the file system constructs '.' (Current directory) and '..' (previous directory). -d The -d option is used to list the directories. -f For each file, print the full path prefix. -i -i option creates a tree nevertheless does not print the indentation lines, if we use this along with the -f option then it is helpful. -l Follow symbolic links to the directories as if they were directories. Those links are avoided that will result in a recursive loop. -x Stay on the present file system, such as fins -xdev. -P pattern Only list those files which match the pattern of wild-card. We should also use the option -a and consider those files which start with the '.' Dot for matching. There are various valid wildcard operators such as '?' (any single character), '*' (any zero or more characters), '[…]' (any single character listed between brackets (optional - (dash) for character range can be used: ex [A-Z]), and '[^….}' (in the bracket there is no single character is listed) and '|' splits alternate patterns. -l pattern This option will not list the files which match the pattern of the wild-card. -prune From the output tree prune makes empty directories, which are helpful when used in conjunction with -P or -l -filelimit # Do not descend directories which include more than # entries. -timefmt format Prints (implies -D) and formats the data based on the format string that uses the strftime syntax. -noreport Omits file's and directory's report printing at the tree listing's end. -p Print the protection of all files. -s -s option will print the size of all files as well as name of the file. -u Print UID # or username if there is no username, of the file. -g If the file has no group name then Print the GID # or group name. D This option is used to print the date of the last alteration time for the file listed. -inodes Print the inode number of the directory or file. -device Print the device number that contains the directory or file. -F Append a '/' for directories, a '=' for socket files. A '*' for executable files and a '|' for FIFO's, as per ls -F -q This option prints the non-printable characters inside the name of the file, like question marks rather than the default carrot notation. -N This option prints the non-printable characters as is rather than of the default carrot notation -r This option will sort the result in the reverse alphabetical order. -t Sort the result according to the time of last alteration rather than alphabetical order. dirsdirst Before files, list directories. -n Always turn off the colorization that is over-ridden by the option -C. -C If the variable of LS_COLORS environment is not set, always turn on colorization using the created color default. It is helpful to colorize output to the pipe. -A While printing the indentation lines turn on ANSI line graphics hack at the time. -S Turn on ANSII line graphics (It is helpful when we use Linux console mode fronts). Now this option is equal to '-charset=IBM437' and will ultimately be denigrated. -L level Maximum display depth of the director tree. -R Recursively cross down the tree each level directories (check the option -L), and at each of them execute tree again adding '-o 00Tree.html' like new option. -H baseHREF The -H option is responsible to turn on the output of HTML, which contain HTTP references. It is helpful for ftp sites. baseHREF provides the base ftp location if using the HTML output. Means the local directory can be '/local/ftp/pub', but it should be referenced as 'ftp://hostname.oganization.domain/pub' (baseHREF must be 'ftp://hostname.organize.domain'). Hint: with this option, do not use ANSI lines, and in this directory list, do not give more than one directory. We can use colors via CSS stylesheet, use option -C besides this option to color output. -T title In the HTML output mode, sets the title and H1 header string. -charset charset Using this option, set the character set to be used when using HTML and for line drawings. -nolinks In the HTML output -nolinks is used to turn off the hyperlinks. -o file name This option sends the output to the file name. Install Tree Command We have to install the tree command because, by default, it is not installed. In order to install the tree command on RHEL/CentOS/Fedora Linux, we have to type the following command on the terminal: 
# yum install tree
 If we want to install the tree command for Debian / Ubuntu Linux / Mint, then we have to type the following command: 
$ sudo apt install tree
 If we want to install tree command for Apple OS X, type: 
Brew install tree
 How to Use Tree Command A Tree is a program that exists for Unix and Unix-like systems. It is a recursive directory listing program which generates the depth-indented listing of files. Without any parameters, tree lists the files in the present directory. When the directory parameters are given, tree lists each and every files and directories found in the given directory subsequently. When the listing of files and directories are completed, then the tree returns the total number of directories and files listed. Let's see some examples of the tree command that will help you to understand the tree command: Basic Tree Output The most general way of using the tree command: 
$ tree
 When we type the above command on the terminal, then the output displays the tree structure of our current directory, showing all the files, folders, and sub-folders. Display Contents of a Specific Directory If we want to list the files and subfolders of the particular directory instead of that of the present directory, then we are able to determine the path or directory name via the following syntax: 
$ tree -a [DirectoryName/Path
 Example: If we want to list all the files and sub-folders in the directory named pictures, then we have to write the following command: 
$ tree -a Pictures
 Display Hidden Files along with Other Files Using Tree In the tree command, the list of hidden folders and files does not display in ubuntu. Although, we can use the 'a' flag in order to list them as follows. 
$ tree -a
 In the tree, the folders and files which are starting from a '.' are the hidden folders and files. Display Only Directory Listing Through Tree We can use 'd' flag in order to see the listing of directory but not the underlying files. In order to display only directory listing through tree we have to type the following command on the terminal. Syntax: 
$ tree -d
 Display Full Path Prefix of Files and Folders Using Tree Using 'f' flag, we can customize the tree flag in order to show the full path as prefix for every folders and files list. Syntax: 
$ tree -f
 It is mainly useful when we need to know what exists where. Display Size of Files and Folders Using Tree Using flag 's' tree command, can print the size in terms of bytes of all the folders and files in the directory. Syntax: 
$ tree -s
 With the help of the 's' flag, we can check which memory items consume more space on our system and getting rid of needless ones. Display Read-Write Permission of Files and Folders Using Tree If we want to see the delete, read and write permissions on the listed folders and files, then we can use the 'p' flag. Syntax: 
$ tree -p
 Thus, before performing operation on a file and folder, we can first see and edit the permissions that exist on a particular item. List Folder Contents till a Certain Level/depth Though Tree Rather than listing each content of our directory, we are able to configure the tree command in order to show the tree to a specific level or path. Such as in tree command the level 1 can only display the list of the given folder instead of any of its subfolder. Syntax: 
$ tree -L[n]
 Example This command will only show the sub-directories (using -d flag) of the present directory not the additional expanded tree. Tree Help The tree command is a lot more useful than what we have defined. We are able to find the command again with the tree command as follows: 
$ tree -help
 Next TopicWine Linux ? prev next ? For Videos Join Our Youtube Channel: Join Now Help Others, Please Share Learn Latest Tutorials SoapUI RPA Manual T. Cucumber Appium PostgreSQL Solr MongoDB Gimp Verilog Teradata PhoneGap Preparation Aptitude Reasoning Verbal A. Interview Company Trending Technologies AI AWS Selenium Cloud Hadoop ReactJS D. Science Angular 7 Blockchain Git ML DevOps B.Tech / MCA DBMS DS DAA OS C. Network Compiler D. COA D. Math. E. Hacking C. Graphics Software E. Web Tech. Cyber Sec. Automata C C++ Java .Net Python Programs Control S. Data Mining Javatpoint Services JavaTpoint offers too many high quality services. Mail us on hr@javatpoint.com, to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at hr@javatpoint.com. Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2018 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.
