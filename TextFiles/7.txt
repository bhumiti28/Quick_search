https://www.javatpoint.com/neon-number-in-java
Neon Number in Java - Javatpoint
Neon Number in Java - Javatpoint ? Home Java Programs OOPs String Regex Exception Multithreading Collections JDBC Swing JavaFX Servlet JSP Spring Spring Boot Projects Interview Questions Java Training Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Neon Number in Java In this section, we will discuss what is the neon numbers and also create a Java program to check if the given number is neon or not. Also, we will find all the neon numbers between a specified range. Neon Number A positive integer whose sum of digits of its square is equal to the number itself is called a neon number. Example of Neon Number Let's take an example and check 9 and 45 are neon numbers or not. Steps to Find Neon Number Read an integer from the user or initialize a number (n) to check. Calculate the square of the given number (n) and store it in variable sq. Find the sum of the digits of the square (sq) and store the sum in the variable (sum). Compare the given number n with If both are equal, the given number is a neon number, else, not a neon number. Let's implement the above steps in a Java program. Neon Number Java Program The logic is very simple. First, we have to calculate the square of the given number. After that, calculate the sum of digits in the square. Let's create a Java program that checks if the given number is neon or not. NeonNumberExample1.java 
import java.util.*;
public class NeonNumberExample1
{
public static void main(String args[])
{
int sum = 0, n;    
Scanner sc = new Scanner(System.in);
System.out.print("Enter the number to check: ");
//raeds an integer from the user
n = sc.nextInt();
//calculate square of the given number
int square = n * n;
//loop executes until the condition becomes false
while(square != 0)
{
//find the last digit of the square    
int digit = square % 10;
//adds digits to the variable sum
sum = sum + digit;
//removes the last digit of the variable square
square = square / 10;
}
//compares the given number (n) with sum
if(n == sum)
System.out.println(n + " is a Neon Number.");
else
System.out.println(n + " is not a Neon Number.");
}
}
 Output: 
Enter the number to check: 9
9 is a Neon Number.
 Let's find all the neon numbers between a specified range. NeonNumberExample2.java 
import java.io.*; 
public class NeonNumberExample2 
{ 
//function to check Neon Number 
static boolean isNeon(int num) 
{ 
//calculate the square of the given number
int sq = num * num; 
//stores the sum of digits
int sumOfdigits = 0;
//executes until the condition becomes false
while (sq != 0) 
{ 
//finds the last digit of the variable sq and adds it to the variable sum   
sumOfdigits = sumOfdigits + sq % 10; 
//removes the last dogit of the variable sq
sq = sq / 10; 
} 
//compares the sumOgDigits with num and returns the boolean value accordingly
return (sumOfdigits == num); 
} 
//driver Code 
public static void main(String args[])
{ 
System.out.print("Neon Numbers between the given range are: ");    
// 0 is the lowe limit and 100000 is the upper limit
for (int i = 0; i <= 100000; i++) 
//calling the user-defined number
if (isNeon(i)) 
//prints all the neon numbers between given range
System.out.print(i+" ");		 
} 
} 
 Output: 
Neon Numbers between the given range are: 0 1 9
 We get only three neon numbers between 0 to 100000. So, there is a probability that 1 Trillion also includes 0, 1, 9 as the neon numbers. Next TopicSpy Number in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Help Others, Please Share Learn Latest Tutorials SoapUI RPA Manual T. Cucumber Appium PostgreSQL Solr MongoDB Gimp Verilog Teradata PhoneGap Preparation Aptitude Reasoning Verbal A. Interview Company Trending Technologies AI AWS Selenium Cloud Hadoop ReactJS D. Science Angular 7 Blockchain Git ML DevOps B.Tech / MCA DBMS DS DAA OS C. Network Compiler D. COA D. Math. E. Hacking C. Graphics Software E. Web Tech. Cyber Sec. Automata C C++ Java .Net Python Programs Control S. Data Mining Javatpoint Services JavaTpoint offers too many high quality services. Mail us on hr@javatpoint.com, to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at hr@javatpoint.com. Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2018 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.
